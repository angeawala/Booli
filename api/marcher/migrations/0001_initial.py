# Generated by Django 5.1.6 on 2025-03-14 22:13

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom de la boutique', max_length=255, verbose_name='Nom')),
                ('image', models.ImageField(blank=True, help_text="Image représentative de l'entité (optionnel).", null=True, upload_to='market/', verbose_name='Image')),
                ('email', models.EmailField(help_text='Adresse email de contact.', max_length=254, verbose_name='Email')),
                ('description', models.TextField(help_text="Description détaillée de l'entité.", verbose_name='Description')),
                ('contact', models.CharField(help_text='Numéro de téléphone ou autre moyen de contact.', max_length=255, verbose_name='Contact')),
                ('address', models.TextField(help_text="Adresse physique de l'entité.", verbose_name='Adresse')),
                ('average_rating', models.FloatField(default=0.0, help_text='Note moyenne basée sur les avis des utilisateurs.', verbose_name='Note moyenne')),
                ('rating_count', models.JSONField(default=dict, help_text="Répartition des notes par étoile (ex. {'1': 5, '2': 3}).", verbose_name='Détail des notes')),
                ('specialty', models.CharField(help_text='Spécialité médicale du docteur.', max_length=255, verbose_name='Spécialité')),
            ],
            options={
                'verbose_name': 'Docteur',
                'verbose_name_plural': 'Docteurs',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom de la boutique', max_length=255, verbose_name='Nom')),
                ('image', models.ImageField(blank=True, help_text="Image représentative de l'entité (optionnel).", null=True, upload_to='market/', verbose_name='Image')),
                ('email', models.EmailField(help_text='Adresse email de contact.', max_length=254, verbose_name='Email')),
                ('description', models.TextField(help_text="Description détaillée de l'entité.", verbose_name='Description')),
                ('contact', models.CharField(help_text='Numéro de téléphone ou autre moyen de contact.', max_length=255, verbose_name='Contact')),
                ('address', models.TextField(help_text="Adresse physique de l'entité.", verbose_name='Adresse')),
                ('average_rating', models.FloatField(default=0.0, help_text='Note moyenne basée sur les avis des utilisateurs.', verbose_name='Note moyenne')),
                ('rating_count', models.JSONField(default=dict, help_text="Répartition des notes par étoile (ex. {'1': 5, '2': 3}).", verbose_name='Détail des notes')),
            ],
            options={
                'verbose_name': 'Marque',
                'verbose_name_plural': 'Marques',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom de la boutique', max_length=255, verbose_name='Nom')),
                ('image', models.ImageField(blank=True, help_text="Image représentative de l'entité (optionnel).", null=True, upload_to='market/', verbose_name='Image')),
                ('email', models.EmailField(help_text='Adresse email de contact.', max_length=254, verbose_name='Email')),
                ('description', models.TextField(help_text="Description détaillée de l'entité.", verbose_name='Description')),
                ('contact', models.CharField(help_text='Numéro de téléphone ou autre moyen de contact.', max_length=255, verbose_name='Contact')),
                ('address', models.TextField(help_text="Adresse physique de l'entité.", verbose_name='Adresse')),
                ('average_rating', models.FloatField(default=0.0, help_text='Note moyenne basée sur les avis des utilisateurs.', verbose_name='Note moyenne')),
                ('rating_count', models.JSONField(default=dict, help_text="Répartition des notes par étoile (ex. {'1': 5, '2': 3}).", verbose_name='Détail des notes')),
            ],
            options={
                'verbose_name': 'Boutique',
                'verbose_name_plural': 'Boutiques',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Supermarket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom de la boutique', max_length=255, verbose_name='Nom')),
                ('image', models.ImageField(blank=True, help_text="Image représentative de l'entité (optionnel).", null=True, upload_to='market/', verbose_name='Image')),
                ('email', models.EmailField(help_text='Adresse email de contact.', max_length=254, verbose_name='Email')),
                ('description', models.TextField(help_text="Description détaillée de l'entité.", verbose_name='Description')),
                ('contact', models.CharField(help_text='Numéro de téléphone ou autre moyen de contact.', max_length=255, verbose_name='Contact')),
                ('address', models.TextField(help_text="Adresse physique de l'entité.", verbose_name='Adresse')),
                ('average_rating', models.FloatField(default=0.0, help_text='Note moyenne basée sur les avis des utilisateurs.', verbose_name='Note moyenne')),
                ('rating_count', models.JSONField(default=dict, help_text="Répartition des notes par étoile (ex. {'1': 5, '2': 3}).", verbose_name='Détail des notes')),
            ],
            options={
                'verbose_name': 'Supermarché',
                'verbose_name_plural': 'Supermarchés',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom de la boutique', max_length=255, verbose_name='Nom')),
                ('image', models.ImageField(blank=True, help_text="Image représentative de l'entité (optionnel).", null=True, upload_to='market/', verbose_name='Image')),
                ('email', models.EmailField(help_text='Adresse email de contact.', max_length=254, verbose_name='Email')),
                ('description', models.TextField(help_text="Description détaillée de l'entité.", verbose_name='Description')),
                ('contact', models.CharField(help_text='Numéro de téléphone ou autre moyen de contact.', max_length=255, verbose_name='Contact')),
                ('address', models.TextField(help_text="Adresse physique de l'entité.", verbose_name='Adresse')),
                ('average_rating', models.FloatField(default=0.0, help_text='Note moyenne basée sur les avis des utilisateurs.', verbose_name='Note moyenne')),
                ('rating_count', models.JSONField(default=dict, help_text="Répartition des notes par étoile (ex. {'1': 5, '2': 3}).", verbose_name='Détail des notes')),
                ('website', models.URLField(blank=True, help_text='URL du site web de la compagnie (optionnel).', null=True, verbose_name='Site web')),
                ('purpose', models.CharField(choices=[('sell', 'Vendre des produits'), ('publish', 'Se faire publier'), ('opportunity', 'Offrir des opportunités')], help_text="Raison principale de l'enregistrement de la compagnie.", max_length=50, verbose_name='Objectif')),
                ('categories', models.ManyToManyField(help_text='Catégories associées (commerciales ou réservations, ex. transport).', limit_choices_to={'category_type__in': ['commercial', 'reservation']}, related_name='companies', to='category.category', verbose_name='Catégories')),
            ],
            options={
                'verbose_name': 'Compagnie',
                'verbose_name_plural': 'Compagnies',
                'ordering': ['email'],
            },
        ),
    ]
