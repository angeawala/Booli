# Generated by Django 5.1.6 on 2025-04-01 10:46

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utils', '0002_rename_ville_adresse_city_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique (UUID v4) non modifiable.', primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date et heure de création (non modifiable).', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('image', models.ImageField(upload_to='products/', verbose_name='Image')),
                ('description', models.TextField(verbose_name='Description')),
                ('prix_normal', models.JSONField(verbose_name='Prix normal')),
                ('prix_reduit', models.JSONField(blank=True, null=True, verbose_name='Prix réduit')),
                ('stock', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('product_type', models.CharField(choices=[('book', 'Book'), ('commercial', 'Commercial'), ('pharmacy', 'Pharmacy')], max_length=20, verbose_name='Type de produit')),
                ('created_by', models.ForeignKey(blank=True, editable=False, help_text='Utilisateur ayant créé l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, help_text='Utilisateur ayant mis à jour l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Mis à jour par')),
            ],
            options={
                'verbose_name': 'Produit de base',
                'verbose_name_plural': 'Produits de base',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique (UUID v4) non modifiable.', primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date et heure de création (non modifiable).', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('note', models.PositiveSmallIntegerField(help_text='Note entre 1 et 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('commentaire', models.TextField(verbose_name='Commentaire')),
                ('created_by', models.ForeignKey(blank=True, editable=False, help_text='Utilisateur ayant créé l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='base_products.baseproduct', verbose_name='Produit')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, help_text='Utilisateur ayant mis à jour l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Mis à jour par')),
            ],
            options={
                'verbose_name': 'Avis',
                'verbose_name_plural': 'Avis',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique (UUID v4) non modifiable.', primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Date et heure de création (non modifiable).', verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('adresse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='utils.adresse')),
                ('created_by', models.ForeignKey(blank=True, editable=False, help_text='Utilisateur ayant créé l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, help_text='Utilisateur ayant mis à jour l’entrée.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Mis à jour par')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='baseproduct',
            index=models.Index(fields=['product_type'], name='base_produc_product_5d5a5f_idx'),
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['created_at'], name='base_produc_created_4908c7_idx'),
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['updated_at'], name='base_produc_updated_9dcefd_idx'),
        ),
    ]
