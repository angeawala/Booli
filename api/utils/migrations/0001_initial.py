# Generated by Django 5.1.6 on 2025-03-14 22:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payement', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_manage_cities', 'Peut gérer les villes')],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='utils.city')),
            ],
            options={
                'permissions': [('can_manage_addresses', 'Peut gérer les adresses')],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_manage_countries', 'Peut gérer les pays')],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='utils.country'),
        ),
        migrations.CreateModel(
            name='PlanAbonnement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du plan')),
                ('temps', models.PositiveIntegerField(help_text="Durée en jours de l'abonnement", verbose_name='Durée (en jours)')),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('devise', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='payement.devise', verbose_name='Devise')),
            ],
            options={
                'verbose_name': "Plan d'abonnement",
                'verbose_name_plural': "Plans d'abonnement",
            },
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(editable=False, max_length=8, unique=True, verbose_name="Code d'abonnement")),
                ('date_debut', models.DateTimeField(auto_now_add=True, verbose_name='Date de début')),
                ('date_expiration', models.DateTimeField(blank=True, verbose_name="Date d'expiration")),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='abonnements', to='payement.payment', verbose_name='Paiement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abonnements', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='utils.planabonnement', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
            },
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together={('country', 'name')},
        ),
    ]
