# Generated by Django 5.1.6 on 2025-03-14 22:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('author', models.CharField(help_text='Auteur du livre.', max_length=255, verbose_name='Auteur')),
                ('isbn', models.CharField(blank=True, help_text='Numéro ISBN du livre (optionnel).', max_length=13, null=True, verbose_name='ISBN')),
                ('is_free', models.BooleanField(default=False, help_text='Indique si le livre est disponible gratuitement en PDF.', verbose_name='Gratuit')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='Prix après réduction pour la version physique (optionnel).', max_digits=10, null=True, verbose_name='Prix réduit')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Nombre de versions physiques en stock.', verbose_name='Stock')),
            ],
            options={
                'verbose_name': 'Produit livre',
                'verbose_name_plural': 'Produits livres',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si le panier est actuellement utilisé.', verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Quantité du produit dans le panier.', verbose_name='Quantité')),
            ],
            options={
                'verbose_name': 'Élément de panier',
                'verbose_name_plural': 'Éléments de panier',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Montant total de la commande.', max_digits=10, verbose_name='Montant total')),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('en_cours', 'En cours'), ('completee', 'Complétée'), ('annulee', 'Annulée')], default='en_attente', help_text='Statut actuel de la commande.', max_length=20, verbose_name='Statut')),
                ('commande_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date et heure de création de la commande.', verbose_name='Date de commande')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-commande_date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Quantité en stock.', verbose_name='Stock')),
                ('is_wholesale', models.BooleanField(default=True, help_text='Toujours vrai pour les entreprises.', verbose_name='Vente en gros')),
                ('details', models.JSONField(blank=True, default=dict, help_text="Informations supplémentaires au format JSON (ex. {'poids': '10kg'}).", verbose_name='Détails')),
            ],
            options={
                'verbose_name': "Produit d'entreprise",
                'verbose_name_plural': "Produits d'entreprise",
            },
        ),
        migrations.CreateModel(
            name='MarkProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Quantité en stock.', verbose_name='Stock')),
                ('is_active', models.BooleanField(default=False, help_text='Indique si le produit est activé par un admin.', verbose_name='Actif')),
                ('details', models.JSONField(blank=True, default=dict, help_text="Informations supplémentaires au format JSON (ex. {'matériau': 'bois'}).", verbose_name='Détails')),
            ],
            options={
                'verbose_name': 'Produit de marque',
                'verbose_name_plural': 'Produits de marque',
            },
        ),
        migrations.CreateModel(
            name='PharmacyProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='Prix après réduction (optionnel).', max_digits=10, null=True, verbose_name='Prix réduit')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Quantité en stock.', verbose_name='Stock')),
                ('details', models.JSONField(blank=True, default=dict, help_text="Informations supplémentaires au format JSON (ex. {'dosage': '500mg'}).", verbose_name='Détails')),
            ],
            options={
                'verbose_name': 'Produit pharmacopée',
                'verbose_name_plural': 'Produits pharmacopée',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Pourcentage de réduction appliqué (ex. 20.00 pour 20%).', max_digits=5, verbose_name='Pourcentage de réduction')),
                ('start_date', models.DateTimeField(help_text='Date de début de la promotion.', verbose_name='Date de début')),
                ('end_date', models.DateTimeField(help_text='Date de fin de la promotion.', verbose_name='Date de fin')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('rating', models.PositiveSmallIntegerField(help_text='Note de 1 à 5 étoiles.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('comment', models.TextField(blank=True, help_text='Commentaire laissé par l’utilisateur (optionnel).', verbose_name='Commentaire')),
            ],
            options={
                'verbose_name': 'Avis',
                'verbose_name_plural': 'Avis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='Prix après réduction (optionnel).', max_digits=10, null=True, verbose_name='Prix réduit')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Quantité en stock.', verbose_name='Stock')),
                ('expiration_date', models.DateTimeField(blank=True, help_text='Date après laquelle le produit n’est plus valide (optionnel).', null=True, verbose_name="Date d'expiration")),
                ('is_wholesale', models.BooleanField(default=False, help_text='Indique si le produit est vendu en gros.', verbose_name='Vente en gros')),
                ('details', models.JSONField(blank=True, default=dict, help_text="Informations supplémentaires au format JSON (ex. {'taille': 'M'}).", verbose_name='Détails')),
            ],
            options={
                'verbose_name': 'Produit de boutique',
                'verbose_name_plural': 'Produits de boutique',
            },
        ),
        migrations.CreateModel(
            name='SupermarketProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='Prix après réduction (optionnel).', max_digits=10, null=True, verbose_name='Prix réduit')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Quantité en stock.', verbose_name='Stock')),
                ('expiration_date', models.DateTimeField(blank=True, help_text='Date après laquelle le produit n’est plus valide (optionnel).', null=True, verbose_name="Date d'expiration")),
                ('is_wholesale', models.BooleanField(default=False, help_text='Indique si le produit est vendu en gros.', verbose_name='Vente en gros')),
                ('details', models.JSONField(blank=True, default=dict, help_text="Informations supplémentaires au format JSON (ex. {'poids': '500g'}).", verbose_name='Détails')),
            ],
            options={
                'verbose_name': 'Produit de supermarché',
                'verbose_name_plural': 'Produits de supermarché',
            },
        ),
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'entrée (UUID).", primary_key=True, serialize=False, verbose_name='Identifiant')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text="Date et heure de création de l'entrée.", verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date et heure de la dernière mise à jour.', verbose_name='Date de mise à jour')),
                ('name', models.CharField(help_text='Nom du produit.', max_length=255, verbose_name='Nom')),
                ('price', models.DecimalField(decimal_places=2, help_text='Prix de base du produit.', max_digits=10, verbose_name='Prix')),
                ('category', models.ForeignKey(help_text='Catégorie principale du produit.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_products', to='category.category', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Produit de base',
                'verbose_name_plural': 'Produits de base',
                'ordering': ['name'],
            },
        ),
    ]
